import { json } from "express";
import { upsertUser } from "../lib/airtable.js";
import { sendMessage } from "../lib/telegram.js";

export default async function handler(req, res) {
  if (req.method !== "POST") return res.status(405).send("Method Not Allowed");

  const update = req.body;
  if (!update.message) return res.json({ ok: true });

  const chatId = update.message.chat.id;
  const text = (update.message.text || "").trim();

  if (text === "/start") {
    await sendMessage(
      chatId,
      `üëã –ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø—É—Ç—å –∫ —Ç—Ä–µ–∑–≤–æ—Å—Ç–∏.\nüí¨ –ù–∞–ø–∏—à–∏, —Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π —Ç—ã —É–∂–µ –Ω–µ –ø—å—ë—à—å:\n- <b>0</b> ‚Äì —Å–µ–≥–æ–¥–Ω—è –ø–µ—Ä–≤—ã–π –¥–µ–Ω—å\n- <b>5</b> ‚Äì —É–∂–µ 5 –¥–Ω–µ–π\n- –ª—é–±–æ–µ –¥—Ä—É–≥–æ–µ —á–∏—Å–ª–æ`
    );
    return res.json({ ok: true });
  }

  if (text.toLowerCase() === "/reset" || text.toLowerCase() === "reset") {
    await sendMessage(
      chatId,
      `üîÑ –î–∞–≤–∞–π –Ω–∞—á–Ω—ë–º –∑–∞–Ω–æ–≤–æ! –í–≤–µ–¥–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –±–µ–∑ –∞–ª–∫–æ–≥–æ–ª—è (0‚ÄØ‚Äì‚ÄØ–ø–µ—Ä–≤—ã–π –¥–µ–Ω—å).`
    );
    return res.json({ ok: true });
  }

  const days = Number(text);
  if (!Number.isNaN(days) && days >= 0) {
    const today = new Date().toISOString().split("T")[0];
    const timezone = update.message.from?.language_code || "en";

    await upsertUser(chatId, today, days + 1, timezone);
    await sendMessage(
      chatId,
      `‚úÖ –ó–∞–ø–∏—Å–∞–Ω–æ: —É —Ç–µ–±—è —É–∂–µ <b>${days + 1}</b> –¥–µ–Ω—å(–¥–Ω–µ–π) –±–µ–∑ –∞–ª–∫–æ–≥–æ–ª—è!\nüöÄ –ë—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å –ø–æ–ª–µ–∑–Ω—ã–µ —Ñ–∞–∫—Ç—ã –∫–∞–∂–¥—ã–π –¥–µ–Ω—å.`
    );
    return res.json({ ok: true });
  }

  await sendMessage(
    chatId,
    `‚ùì –Ø –Ω–µ –ø–æ–Ω—è–ª —Ç–≤–æ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ.\n–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –¥–Ω–µ–π (–Ω–∞–ø—Ä–∏–º–µ—Ä <b>0</b>, <b>7</b>) –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /reset.`
  );
  return res.json({ ok: true });
}
